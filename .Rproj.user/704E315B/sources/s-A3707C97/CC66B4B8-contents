library(shiny)
shinyServer(function(input, output) {
  require(splines)
  model <-lm(mpg~bs(hp,knots=c(100,200)),mtcars)
  hp.lims=range(mtcars$hp)
  hp.grid=seq(from=hp.lims[1],to=hp.lims[2])
  preds=predict(model,newdata=list(hp=hp.grid),se=TRUE)
  se.bands=cbind(preds$fit+3*preds$se,preds$fit-3*preds$se)
 
  hpInput <- reactive({
    input$sliderHP})
  
  modelpred <- reactive({
    predict(model, newdata = data.frame(hp = hpInput()))
  
  })
  
  modelpredmin <- reactive({
    predict(model, newdata = data.frame(hp = hpInput()))-3*preds$se[hpInput()-hp.lims[1]]
    
  })
  
  modelpredmax <- reactive({
    predict(model, newdata = data.frame(hp = hpInput()))+3*preds$se[hpInput()-hp.lims[1]]
    
  })
  
  output$plot1 <- renderPlot({
    plot(mtcars$hp, mtcars$mpg, xlab = "HorsePower", 
         ylab = "mpg", bty = "n", pch = 16,
         xlim = c(50, 400), ylim = c(6, 40))
     lines(hp.grid,preds$fit,col="blue",lwd=2)
      abline(v=c(100,200),lty=2,col="blue")
      matlines(hp.grid,se.bands,col="lightblue",lty =2)
      abline(v=hpInput(),lty=2,col="red")
 #      points(hpInput, modelpred(), col = "red", pch = 16, cex = 2)

  })
  
  output$info <- renderText({
    paste0("x=", input$plot_click$x, "\ny=", input$plot_click$y)
  })
  
  output$pred <- renderText({
    modelpred()
  })
  
  output$predmin <- renderText({
    modelpredmin()
  })
  
  output$predmax <- renderText({
    modelpredmax()
  })
  
  
})